{"version":3,"sources":["../../../projects/ion-select-search-lib/src/lib/default-alert-search.directive.ts","../../../projects/ion-select-search-lib/src/lib/ion-select-search-lib.module.ts"],"names":["IonSelectSearchDirective","elementRef","this","prototype","onSelectClick","_this","setTimeout","initDirective","selectWrapper","document","getElementsByClassName","selectBody","inputElement","createInputElement","insertBefore","getSelectOptions","selectOptions","input","createElement","setAttribute","id","style","padding","border","onkeyup","onSearchChanged","filter","i","getElementById","value","toUpperCase","length","item","querySelector","innerHTML","indexOf","display","Directive","args","selector","ElementRef","HostListener","NgModule","declarations","imports","exports"],"mappings":"8VAUE,SAAAA,EAAoBC,GAAAC,KAAAD,WAAAA,SAMGD,EAAAG,UAAAC,cAAA,WAAA,IAAAC,EAAAH,KAGrBI,YAAW,WAAMD,EAAKE,kBAAkB,MAI1CP,EAAAG,UAAAI,cAAA,WAEEL,KAAKM,cAAcC,SAASC,uBAAuB,iBAAiB,GACpE,IAAIC,EAAWF,SAASC,uBAAuB,qBAAqB,GAChEE,EAAaV,KAAKW,qBACtBX,KAAKM,cAAcM,aAAaF,EAAaD,IAK/CX,EAAAG,UAAAY,iBAAA,WAEEb,KAAKc,cAAcP,SAASC,uBAAuB,4BAGrDV,EAAAG,UAAAU,mBAAA,WAEE,IAAII,EAAMR,SAASS,cAAc,SAOjC,OALAD,EAAME,aAAa,cAAc,kBACjCF,EAAMG,GAAG,kBACTH,EAAMI,MAAMC,QAAQ,YACpBL,EAAMI,MAAME,OAAO,QACnBN,EAAMO,QAAQtB,KAAKuB,gBACZR,GAGTjB,EAAAG,UAAAsB,gBAAA,WAEE,IAAWC,EAAmBC,EAM9B,IAJAD,EADQjB,SAASmB,eAAe,mBACjBC,MAAMC,cACrB5B,KAAKc,cAAcP,SAASC,uBAAuB,2BAG9CiB,EAAI,EAAGA,EAAIzB,KAAKc,cAAce,OAAQJ,IAE9BzB,KAAKc,cAAcgB,KAAKL,GAAGM,cAAc,uBAAuBA,cAAc,sBAAsBC,UAClGJ,cAAcK,QAAQT,IAAW,EAC5CxB,KAAKc,cAAcgB,KAAKL,GAAGN,MAAMe,QAAU,GAE3ClC,KAAKc,cAAcgB,KAAKL,GAAGN,MAAMe,QAAU,iCA9DlDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4DAHQC,EAAAA,qDAgBjBC,EAAAA,aAAYH,KAAA,CAAC,kBCLhB,iCANCI,EAAAA,SAAQJ,KAAA,CAAC,CACRK,aAAc,CAAC3C,GACf4C,QAAS,GAETC,QAAS,CAAC7C","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[idlDefault]'\n})\nexport class IonSelectSearchDirective {\n\n  selectWrapper: any;\n  selectOptions: any;\n  \n  constructor(private elementRef:ElementRef) \n  {\n    //The element to which this directive is applied to is accessed by the constructor's ElementRef injectable\n    // console.log('Inside IonSelectSearchDirective constructor',elementRef);\n  }\n\n  @HostListener('click') onSelectClick()\n  {\n    // console.log('On Select Click');\n    setTimeout(()=>{ this.initDirective();},100)\n   \n  }\n\n  initDirective()\n  {\n    this.selectWrapper=document.getElementsByClassName('alert-wrapper')[0];\n    let selectBody=document.getElementsByClassName('alert-radio-group')[0]\n    let inputElement=this.createInputElement();\n    this.selectWrapper.insertBefore(inputElement,selectBody);\n\n    // console.log('Select Wrapper--',this.selectWrapper,'---Select Options---',this.selectOptions);\n  }\n\n  getSelectOptions()\n  {\n    this.selectOptions=document.getElementsByClassName('select-interface-option'); \n  }\n\n  createInputElement()\n  {\n    let input=document.createElement('Input');\n    // input.focus(); //Set the focus to the Input Element\n    input.setAttribute('placeholder','Type to search'); \n    input.id=\"i_s_searchInput\";\n    input.style.padding=\"0.5em 1em\";\n    input.style.border=\"unset\";\n    input.onkeyup=this.onSearchChanged;\n    return input;\n  }\n\n  onSearchChanged()\n  {  \n    var input, filter, ul, li, a, i, txtValue;\n    input = document.getElementById('i_s_searchInput');\n    filter = input.value.toUpperCase();\n    this.selectOptions=document.getElementsByClassName('select-interface-option'); \n    // console.log('Inside onSearchChanged',this.selectOptions);\n    // Loop through all list items, and hide those who don't match the search query\n    for (i = 0; i < this.selectOptions.length; i++) \n    {\n      txtValue = this.selectOptions.item(i).querySelector('.alert-button-inner').querySelector('.alert-radio-label').innerHTML;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        this.selectOptions.item(i).style.display = \"\";\n      } else {\n        this.selectOptions.item(i).style.display = \"none\";\n      }\n    }}\n\n}\n","import { NgModule } from '@angular/core';\nimport { IonSelectSearchDirective } from './default-alert-search.directive';\n\n\n\n@NgModule({\n  declarations: [IonSelectSearchDirective],\n  imports: [\n  ],\n  exports: [IonSelectSearchDirective]\n})\nexport class IonSelectSearchLibModule { }\n"]}